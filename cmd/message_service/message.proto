syntax = "proto3";
package message;
option go_package = "message";

message BaseResp {
  int32 status_code = 1;//状态码
  string status_message = 2;//状态描述
  int64 service_time = 3;//服务时间
}
message MessageChatReq {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int64 pre_msg_time=3;//上次最新消息的时间（新增字段-apk更新中）
}

message MessageChatRes {
  BaseResp base_resp = 1;
  repeated Message message_list = 2; // 消息列表
}

message Message {
  int64 id = 1; // 消息id
  int64 to_user_id = 2; // 该消息接收者的id
  int64 from_user_id =3; // 该消息发送者的id
  string content = 4; // 消息内容
  string create_time = 5; // 消息创建时间
}
message MessageActionReq {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message MessageActionRes {
  BaseResp base_resp = 1;
}

message FriendListReq {
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}

message FriendListRes {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  FriendUser user_list = 3; // 用户列表
}

message FriendUser {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  string message = 6; // 和该好友的最新聊天消息
  int64 msgType = 7; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}

service MassageService {
  rpc FriendList (FriendListReq) returns (FriendListRes) {}
  rpc SendMessage(MessageActionReq) returns (MessageActionRes){}
  rpc MessageList (MessageChatReq) returns (MessageChatRes) {}
}